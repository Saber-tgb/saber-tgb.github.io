(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{264:function(e,t,l){"use strict";l.r(t);var a=l(0),v=Object(a.a)({},function(){var e=this,t=e.$createElement,l=e._self._c||t;return l("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[l("h2",{attrs:{id:"初识-http-协议"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#初识-http-协议","aria-hidden":"true"}},[e._v("#")]),e._v(" 初识 HTTP 协议")]),e._v(" "),l("ol",[l("li",[e._v("HTTP 协议是一种数据传输协议，客服端通过 HTTP 请求向服务器获取资源，服务器通过 HTTP 响应提供资源给客服端。")]),e._v(" "),l("li",[e._v("媒体类型(MIME 类型) - HTTP 给每种要通过 Web 传输的对象都打上了名为 MIME 类型（MIME type）的数据格式标签 - MIME 类型是一种文本标记，表示一种主要的对象类型和一个特定的子类型，中间\n由一条斜杠来分隔 - HTML 格式的文本文档由 text/html 类型来标记 - JPEG 版本的图片为 image/jpeg 类型")])]),e._v(" "),l("h2",{attrs:{id:"uri"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#uri","aria-hidden":"true"}},[e._v("#")]),e._v(" URI")]),e._v(" "),l("ul",[l("li",[e._v("每个 Web 服务器资源都有一个名字，服务器资源名被称为统一资源标识符，URI 就像因特网上的邮政地址一样，在世界范围内唯一标识并定位信息资源")]),e._v(" "),l("li",[e._v("URI 和 URL 的区别在于，URI 表示请求服务器的路径，定义这么一个资源。而 URL 同时说明要如何访问这个资源。")]),e._v(" "),l("li",[e._v("URI 有两种形式，分别称为 URL 和 URN")])]),e._v(" "),l("ol",[l("li",[e._v("URL\n"),l("ul",[l("li",[e._v("URL：统一资源定位符（URL）是资源标识符最常见的形式。URL 描述了一台特定服务器上某资源的特定位置。")]),e._v(" "),l("li",[e._v("大部分 URL 都遵循一种标准格式，这种格式包含三个部分\n"),l("ul",[l("li",[e._v("URL 的第一部分被称为方案（scheme），说明了访问资源所使用的协议类型。这部分通常就是 HTTP 协议。")]),e._v(" "),l("li",[e._v("第二部分给出了服务器的因特网地址（比如，www.joes-hardware.com）。")]),e._v(" "),l("li",[e._v("其余部分指定了 Web 服务器上的某个资源（比如，/specials/saw-blade.gif）")])])])])]),e._v(" "),l("li",[e._v("URN - URI 的第二种形式就是统一资源名（URN）。URN 是作为特定内容的唯一名称使用\n的，与目前的资源所在地无关。")])]),e._v(" "),l("h2",{attrs:{id:"报文"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#报文","aria-hidden":"true"}},[e._v("#")]),e._v(" 报文")]),e._v(" "),l("ul",[l("li",[e._v("从 Web 客户端发往 Web 服务器的 HTTP 报文称为请求报文（request message）。从\n服务器发往客户端的报文称为响应报文（response message）。")]),e._v(" "),l("li",[e._v("HTTP 报文包括以下三个部分\n"),l("ol",[l("li",[e._v("起始行\n"),l("ul",[l("li",[e._v("报文的第一行就是起始行，在请求报文中用来说明要做些什么，在响应报文中说明出现了什么情况")])])]),e._v(" "),l("li",[e._v("首部字段\n"),l("ul",[l("li",[e._v("起始行后面有零个或多个首部字段。每个首部字段都包含一个名字和一个值，为了便于解析，两者之间用冒号（:）来分隔。首部以一个空行结束。添加一个首部字段和添加新行一样简单")])])]),e._v(" "),l("li",[e._v("主体\n"),l("ul",[l("li",[e._v("空行之后就是可选的报文主体了，其中包含了所有类型的数据。请求主体中包括了要发送给 Web 服务器的数据；响应主体中装载了要返回给客户端的数据。起始行和首部都是文本形式且都是结构化的，而主体则不同，主体中可以包含任意的二进制据（比如图片、视频、音轨、软件程序）。当然，主体中也可以包含文本")])])])])])]),e._v(" "),l("p",[l("img",{attrs:{src:"http://ojvil4eq9.bkt.clouddn.com/17-7-12/49459854.jpg",alt:"HTTP"}})]),e._v(" "),l("h2",{attrs:{id:"事务"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#事务","aria-hidden":"true"}},[e._v("#")]),e._v(" 事务")]),e._v(" "),l("ul",[l("li",[e._v("一个 HTTP 事务由一条(从客服端发往服务器的)请求命令来和一个(从服务器发回客服端的)响应结果组成。")])]),e._v(" "),l("ol",[l("li",[e._v("方法\n"),l("ul",[l("li",[e._v("HTTP 支持几种不同的请求命令，这些命令被称为 HTTP 方法,这写方法回告诉服务器要执行什么动作。一般有五种常见的 HTTP 方法。\n"),l("ol",[l("li",[e._v("GET：从服务器向客服端发送命名资源")]),e._v(" "),l("li",[e._v("PUT: 将来自客服端的数据存储到一个命名的服务器的资源中去")]),e._v(" "),l("li",[e._v("DELETE：从服务器中删除命名资源")]),e._v(" "),l("li",[e._v("POST：将客服端数据发送到个服务器网关应用程序")]),e._v(" "),l("li",[e._v("HEAD：仅发送命名资源响应中的 HTTP 首部")])])])])]),e._v(" "),l("li",[e._v("状态码 - 每条 HTTP 响应报文返回时都会携带一个状态码。状态码是一个三位数字的代码，\n告知客户端请求是否成功，或者是否需要采取其他动作。")])]),e._v(" "),l("h2",{attrs:{id:"链接"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#链接","aria-hidden":"true"}},[e._v("#")]),e._v(" 链接")]),e._v(" "),l("ul",[l("li",[e._v("HTTP 网络协议栈")])]),e._v(" "),l("div",{staticClass:"language-text line-numbers-mode"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[e._v("HTTP 应用层\nTCP 传输层\nIP 网络层\n网络特有的链路接口 数据链路层\n物理网络硬件 物理层\n")])]),e._v(" "),l("div",{staticClass:"line-numbers-wrapper"},[l("span",{staticClass:"line-number"},[e._v("1")]),l("br"),l("span",{staticClass:"line-number"},[e._v("2")]),l("br"),l("span",{staticClass:"line-number"},[e._v("3")]),l("br"),l("span",{staticClass:"line-number"},[e._v("4")]),l("br"),l("span",{staticClass:"line-number"},[e._v("5")]),l("br")])]),l("ul",[l("li",[e._v("在 HTTP 客户端向服务器发送报文之前，需要用网际协议（Internet Protocol，IP）\n地址和端口号在客户端和服务器之间建立一条 TCP/IP 连接。 - (a)浏览器从 URL 中解析出服务器的主机名； - (b)浏览器将服务器的主机名转换成服务器的 IP 地址； - (c)浏览器将端口号（如果有的话）从 URL 中解析出来； - (d)浏览器建立一条与 Web 服务器的 TCP 连接； - (e)浏览器向服务器发送一条 HTTP 请求报文； - (f)服务器向浏览器回送一条 HTTP 响应报文； - (g)关闭连接，浏览器显示文档。")])]),e._v(" "),l("p",[l("img",{attrs:{src:"http://ojvil4eq9.bkt.clouddn.com/17-7-12/34277135.jpg",alt:"HTTP"}})]),e._v(" "),l("h2",{attrs:{id:"web-的结构组件"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#web-的结构组件","aria-hidden":"true"}},[e._v("#")]),e._v(" Web 的结构组件")]),e._v(" "),l("ol",[l("li",[e._v("代理: 位于客户端和服务器之间的 HTTP 中间实体。 - 代理位于客户端和服务器之间，接收所有客户端的 HTTP 请求，并\n将这些请求转发给服务器（可能会对请求进行修改之后转发）。")]),e._v(" "),l("li",[e._v("缓存: HTTP 的仓库，使常用页面的副本可以保存在离客户端更近的地方。\n"),l("ul",[l("li",[e._v("Web 缓存（Web cache）或代理缓存（proxy cache）是一种特殊的 HTTP 代理服务器，可以将经过代理传送的常用文档复制保存起来。下一个请求同一文档的客户端就可以享受缓存的私有副本所提供的服务了")])])]),e._v(" "),l("li",[e._v("网关: 连接其他应用程序的特殊 Web 服务器。\n"),l("ul",[l("li",[e._v("网关（gateway）是一种特殊的服务器，作为其他服务器的中间实体使用。通常用于将 HTTP 流量转换成其他的协议。网关接受请求时就好像自己是资源的源端服务器一样。")])])]),e._v(" "),l("li",[e._v("隧道: 对 HTTP 通信报文进行盲转发的特殊代理\n"),l("ul",[l("li",[e._v("隧道（tunnel）是建立起来之后，就会在两条连接之间对原始数据进行盲转发的 HTTP 应用程序。HTTP 隧道通常用来在一条或多条 HTTP 连接上转发非 HTTP 数据，转发时不会窥探数据。")])])]),e._v(" "),l("li",[e._v("Agent 代理: 发起自动 HTTP 请求的半智能 Web 客户端。\n"),l("ul",[l("li",[e._v("用户 Agent 代理（或者简称为 Agent 代理）是代表用户发起 HTTP 请求的客户端程序。所有发布 Web 请求的应用程序都是 HTTP Agent 代理")])])])])])},[],!1,null,null,null);t.default=v.exports}}]);