(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{262:function(t,i,_){"use strict";_.r(i);var a=_(0),e=Object(a.a)({},function(){var t=this,i=t.$createElement,_=t._self._c||i;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"_1-git-简介"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-git-简介","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. git 简介")]),t._v(" "),_("ul",[_("li",[t._v("工作区：本地电脑存放项目文件的地方；")]),t._v(" "),_("li",[t._v("暂存区：在使用 git 管理项目文件的时候，其本地的项目文件会多出一个.git 的文件夹，将这个.git 文件夹称之为版本库。其中.git 文件夹中包含了两个部分，一个是暂存区（Index 或者 Stage）,顾名思义就是暂时存放文件的地方，通常使用 add 命令将工作区的文件添加到暂存区里；")]),t._v(" "),_("li",[t._v("本地仓库：使用 commit 命令可以将暂存区中的文件添加到本地仓库中；")]),t._v(" "),_("li",[t._v("远程仓库：项目代码在远程 git 服务器上，比如项目放在 github 上，就是一个远程仓库，通常使用 clone 命令将远程仓库拷贝到本地仓库中，开发后推送到远程仓库中即可")])]),t._v(" "),_("h2",{attrs:{id:"_2-git-配置"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-git-配置","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. git 配置")]),t._v(" "),_("ol",[_("li",[t._v("配置用户名："),_("code",[t._v('git config --global user.name "your name"')]),t._v(";")]),t._v(" "),_("li",[t._v("配置用户邮箱："),_("code",[t._v('git config --global user.email "youremail@github.com"')]),t._v(";")])]),t._v(" "),_("h2",{attrs:{id:"_3-工作区操作"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-工作区操作","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. 工作区操作")]),t._v(" "),_("h3",{attrs:{id:"新建仓库"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#新建仓库","aria-hidden":"true"}},[t._v("#")]),t._v(" 新建仓库")]),t._v(" "),_("ul",[_("li",[t._v("创建新的本地仓库："),_("code",[t._v("git init")])]),t._v(" "),_("li",[t._v("从远处仓库复制项目："),_("code",[t._v("git clone")])])]),t._v(" "),_("h4",{attrs:{id:"提交"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#提交","aria-hidden":"true"}},[t._v("#")]),t._v(" 提交")]),t._v(" "),_("ul",[_("li",[t._v("提交工作区所有文件到暂存区: "),_("code",[t._v("git add .")])]),t._v(" "),_("li",[t._v("提交工作区中指定文件到暂存区: "),_("code",[t._v("git add [文件名]")])])]),t._v(" "),_("h4",{attrs:{id:"撤销删除"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#撤销删除","aria-hidden":"true"}},[t._v("#")]),t._v(" 撤销删除")]),t._v(" "),_("ul",[_("li",[t._v("删除工作区文件，并且也从暂存区删除对应文件的记录："),_("code",[t._v("git rm -f [文件名]")])]),t._v(" "),_("li",[t._v("从暂存区中删除文件，但是工作区依然还有该文件:"),_("code",[t._v("git rm --cached [文件名]")])]),t._v(" "),_("li",[t._v("拉取暂存区的文件，并将其替换成工作区文件："),_("code",[t._v("git checkout -- [文件名]")]),t._v("，简单的说 就是当我们把工作区弄乱了,可以帮我们 拉取暂存区 恢复工作区")])]),t._v(" "),_("h4",{attrs:{id:"查询信息"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#查询信息","aria-hidden":"true"}},[t._v("#")]),t._v(" 查询信息")]),t._v(" "),_("ul",[_("li",[t._v("查询当前工作区所有文件的状态："),_("code",[t._v("git status")])]),t._v(" "),_("li",[t._v("对比工作区和暂存区之间的差异，即修改后还没有暂存的内容："),_("code",[t._v("git diff")])])]),t._v(" "),_("h2",{attrs:{id:"_4-暂存区操作"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-暂存区操作","aria-hidden":"true"}},[t._v("#")]),t._v(" 4. 暂存区操作")]),t._v(" "),_("h3",{attrs:{id:"提交文件到本地仓库"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#提交文件到本地仓库","aria-hidden":"true"}},[t._v("#")]),t._v(" 提交文件到本地仓库")]),t._v(" "),_("ul",[_("li",[t._v("将暂存区中的文件提交到本地仓库："),_("code",[t._v('git commit -m "commit_info"')])]),t._v(" "),_("li",[t._v("将所有已经使用 git 管理过的文件暂存后一并提交，跳过 add 到暂存区的过程："),_("code",[t._v('git commit -a -m "commit_info"')])]),t._v(" "),_("li",[t._v("提交文件时，发现漏掉几个文件，或者注释写错了，可以修改上一次提交："),_("code",[t._v("git commit -- amend")]),t._v(" "),_("ul",[_("li",[t._v("输入指令后会进入 git vim 编辑器")]),t._v(" "),_("li",[t._v("按"),_("code",[t._v("a")]),t._v(","),_("code",[t._v("i")]),t._v("或"),_("code",[t._v("o")]),t._v("进入编辑模式")]),t._v(" "),_("li",[t._v("按"),_("code",[t._v("ESC")]),t._v("进入操作模式")]),t._v(" "),_("li",[t._v("在操作模式下，"),_("code",[t._v(":wq")]),t._v("为写入退出,"),_("code",[t._v(":q!")]),t._v("不保存退出")])])])]),t._v(" "),_("h4",{attrs:{id:"查看信息"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#查看信息","aria-hidden":"true"}},[t._v("#")]),t._v(" 查看信息")]),t._v(" "),_("ul",[_("li",[t._v("比较暂存区和本地仓库的差异："),_("code",[t._v("git diff --cached")])]),t._v(" "),_("li",[t._v("指定文件在暂存区和本地仓库的不同："),_("code",[t._v("git diff [文件名] --cached")]),t._v(";")]),t._v(" "),_("li",[t._v("查看提交历史："),_("code",[t._v("git log")]),t._v(" "),_("ul",[_("li",[t._v("参数-p 展开每次提交的内容差异"),_("code",[t._v("git log -p")])]),t._v(" "),_("li",[t._v("用-2 显示最近的两次更新"),_("code",[t._v("git log -p -2")])])])])]),t._v(" "),_("h4",{attrs:{id:"版本回退"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#版本回退","aria-hidden":"true"}},[t._v("#")]),t._v(" 版本回退")]),t._v(" "),_("ul",[_("li",[t._v("将代码回退到上一次提交时的状态："),_("code",[t._v("git reset --hard Head")])]),t._v(" "),_("li",[t._v("将代码回退到上上一次提交时的状态: "),_("code",[t._v("git reset --hard Head~1")])]),t._v(" "),_("li",[t._v("将代码回退到上上上一次提交时的状态: "),_("code",[t._v("git reset --hard Head~2")])]),t._v(" "),_("li",[t._v("查看之前所有版本切换的操作记录，可以通过这个命令得到的版本号回退到指定的版本："),_("code",[t._v("git reflog")])]),t._v(" "),_("li",[t._v("将代码回退到指定版本："),_("code",[t._v("git reset --hard [版本号]")])])]),t._v(" "),_("h4",{attrs:{id:"分支管理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#分支管理","aria-hidden":"true"}},[t._v("#")]),t._v(" 分支管理")]),t._v(" "),_("ol",[_("li",[t._v("显示本地仓库的所有分支："),_("code",[t._v("git branch")]),t._v(";")]),t._v(" "),_("li",[t._v("创建分支："),_("code",[t._v("git branch [分支名]")])]),t._v(" "),_("li",[t._v("从当前所处的分支切换到其他分支："),_("code",[t._v("git checkout [分支名]")])]),t._v(" "),_("li",[t._v("新建并切换到新建分支上："),_("code",[t._v("git checkout -b [分支名]")])]),t._v(" "),_("li",[t._v("删除分支："),_("code",[t._v("git branch -d [分支名]")])]),t._v(" "),_("li",[t._v("将当前分支与指定分支进行合并："),_("code",[t._v("git merge [分支名]")]),t._v(";")]),t._v(" "),_("li",[t._v("查看各个分支最后一个提交对象的信息："),_("code",[t._v("git branch -v")]),t._v(";")]),t._v(" "),_("li",[t._v("在远程分支的基础上创建新的本地分支："),_("code",[t._v("git checkout -b <branch-name> <remote-name>/<branch-name>")]),t._v(" "),_("ul",[_("li",[t._v("即："),_("code",[t._v("git checkout -b [本地分支名] origin/[远程分支名]")])]),t._v(" "),_("li",[t._v("使用例子："),_("code",[t._v("git checkout -b branch-dev origin/branch-dev")]),t._v(";")])])])]),t._v(" "),_("h2",{attrs:{id:"_5-本地仓库操作"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_5-本地仓库操作","aria-hidden":"true"}},[t._v("#")]),t._v(" 5. 本地仓库操作")]),t._v(" "),_("ul",[_("li",[t._v("添加远程仓库，取一个变量名代替地址："),_("code",[t._v("git remote add [变量名] [远程服务器地址]")]),t._v(" "),_("ul",[_("li",[t._v("示例："),_("code",[t._v("git remote add origin https://github.com/Saber-tgb/test-git.git")])])])]),t._v(" "),_("li",[t._v("指定默认上传服务器地址并推送分支："),_("code",[t._v("git push -u origin master")]),t._v(" "),_("ul",[_("li",[t._v("将本地的 master 分支推送到 origin 服务器 同时指定 origin 为默认上传服务器地址，后面就可以不加任何参数使用 git push 了")])])]),t._v(" "),_("li",[t._v("将本地仓库某分支推送到远程仓库："),_("code",[t._v("git push origin [分支名]")]),t._v(" "),_("ul",[_("li",[t._v("将"),_("code",[t._v("dev")]),t._v("分支推送到远程仓库"),_("code",[t._v("git push origin dev")])])])]),t._v(" "),_("li",[t._v("拉取远程仓库："),_("code",[t._v("git pull")])])]),t._v(" "),_("h2",{attrs:{id:"_6-忽略文件-gitignore"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_6-忽略文件-gitignore","aria-hidden":"true"}},[t._v("#")]),t._v(" 6. 忽略文件.gitignore")]),t._v(" "),_("ul",[_("li",[t._v("我们可以创建一个名为 .gitignore 的文件，列出要忽略的文件模式")])]),t._v(" "),_("div",{staticClass:"language-text line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("# 此为注释 – 将被 Git 忽略\n# 忽略所有 .a 结尾的文件\n*.a\n# 但 lib.a 除外\n!lib.a\n# 仅仅忽略项目根目录下的 TODO 文件，不包括 subdir/TODO\n/TODO\n# 忽略 build/ 目录下的所有文件\nbuild/\n# 会忽略 doc/notes.txt 但不包括 doc/server/arch.txt\ndoc/*.txt\n# 忽略 doc/ 目录下所有扩展名为 txt 的文件\ndoc/**/*.txt\n")])]),t._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[t._v("1")]),_("br"),_("span",{staticClass:"line-number"},[t._v("2")]),_("br"),_("span",{staticClass:"line-number"},[t._v("3")]),_("br"),_("span",{staticClass:"line-number"},[t._v("4")]),_("br"),_("span",{staticClass:"line-number"},[t._v("5")]),_("br"),_("span",{staticClass:"line-number"},[t._v("6")]),_("br"),_("span",{staticClass:"line-number"},[t._v("7")]),_("br"),_("span",{staticClass:"line-number"},[t._v("8")]),_("br"),_("span",{staticClass:"line-number"},[t._v("9")]),_("br"),_("span",{staticClass:"line-number"},[t._v("10")]),_("br"),_("span",{staticClass:"line-number"},[t._v("11")]),_("br"),_("span",{staticClass:"line-number"},[t._v("12")]),_("br"),_("span",{staticClass:"line-number"},[t._v("13")]),_("br")])])])},[],!1,null,null,null);i.default=e.exports}}]);